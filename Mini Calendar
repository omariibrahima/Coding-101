#include <stdio.h>
#include <stdbool.h>

bool is_leap_year(int yy)
{
  if (yy % 4 !=0)
  return false;
  
  else if (yy % 100 != 0)
  return true;

  else if (yy % 400 != 0)
  return false;

  else return true;  
}

int days_in_month[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
const char* month_names[] = {"", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};

void add_days_to_date(int* mm, int* dd, int* yy, int days_left_to_add)
{
  int days_left_in_month;
  
  while (days_left_to_add > 0) {
    days_left_in_month = days_in_month[*mm] - *dd;
    if (*mm == 2 && is_leap_year(*yy)) {
        days_left_in_month++;
    }
    
    if (days_left_to_add > days_left_in_month) 
    {
        days_left_to_add -= days_left_in_month + 1;
        *dd = 1;

        if (*mm == 12) 
        {
            *mm = 1;
            *yy = *yy + 1;
        } else {
            *mm = *mm + 1;
        }
    } 
    
    else 
    {
        *dd = *dd + days_left_to_add;
        days_left_to_add = 0;
    }
  }
}

int main() 
{
  int mm, dd, yy, days_left_to_add;
  printf("Please enter a date between the years 1800 and 10000 in the format of mm dd yyyy and provide the number if days to add to this date: ");
  scanf("%d%d%d%d", &mm, &dd, &yy, &days_left_to_add);
  if (is_leap_year(yy))
  {
    printf("Leap Year\n");
  }
      else
      {
        printf("Not Leap Year\n");
      }

      add_days_to_date(&mm, &dd, &yy, days_left_to_add);

      printf("New date: %s %d %d\n", month_names[mm], dd, yy);
    
    return 0;
  }
