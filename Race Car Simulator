#include <stdio.h>
#include <stdlib.h>
#include <time.h>

// Structures section
struct Race
{
  int numberOfLaps;
  int currentLap;
  char* firstPlaceDriverName;
  char* firstPlaceRaceCarColor;
};
struct raceCar
{
  char* driverName;
  char* raceCarColor;
  int totalLapTime;
};

// Print functions section
void printIntro()
{
  printf("Welcome to our main event digital race fans!\n");
  printf("I hope everybody has their snacks because we are about to begin!\n");
}

void printCountDown()
{
  printf("Racers Ready! In...\n");
  printf("5\n");
  printf("4\n");
  printf("3\n");
  printf("2\n");
  printf("1\n");
  printf("Race\n");
}

void printFirstPlaceAfterLap(struct Race race)
{
  printf("After lap number %d\n", race.currentLap);
  printf("First Place is: %s in the %s race car\n", race.firstPlaceDriverName, race.firstPlaceRaceCarColor);
}

void printCongratulations(struct Race race)
{
  printf("Let's all congratulate %s in the %s race car for an amazing performance\n", race.firstPlaceDriverName, race.firstPlaceRaceCarColor);
  printf("It was a great race and everybodyhave a goodnight!\n");
}

// Logic functions section
int calculateTimeToCompleteLap()
{
  int speed = (rand() % 3) + 1;
  int acceleration = (rand() % 3) + 1;
  int nerves = (rand() % 3) + 1;
}

void updateRaceCar(struct raceCar* RaceCar)
{
  int lapTime = calculateTimeToCompleteLap();
  RaceCar->totalLapTime += lapTime;
}

void updateFirstPlace(struct Race* race, struct raceCar* raceCar1, struct raceCar* raceCar2)
{
  if(raceCar1->totalLapTime <= raceCar2->totalLapTime)
  {
    race->firstPlaceDriverName = raceCar1->driverName;
    race->firstPlaceRaceCarColor = raceCar1->raceCarColor;
  }
  else
  {
    race->firstPlaceDriverName = raceCar2->driverName;
    race->firstPlaceRaceCarColor = raceCar2->raceCarColor;
  }
}

void startRace(struct raceCar* raceCar1, struct raceCar* raceCar2)
{
  struct Race race = {5, 1, "", ""}; 
  for (race.currentLap = 1; race.currentLap <= race.numberOfLaps; race.currentLap++)
  {
    updateRaceCar(raceCar1);
    updateRaceCar(raceCar2);
    updateFirstPlace(&race, raceCar1,raceCar2);
    printFirstPlaceAfterLap(race);
  }

  printCongratulations(race);
}

int main() {
	srand(time(0)); // Initialize random number generator
  printIntro(); // call the printIntro Function
  printCountDown(); // call printCountDown function
  struct raceCar raceCar1 = {"Captain Falcon", "Falcon Blue", 0};
  struct raceCar raceCar2 = {"Super Mario", "Fireplant Red", 0};

  startRace(&raceCar1, &raceCar2);

  return 0;
  
};
